buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id "com.dorongold.task-tree" version "1.4"
}

group 'qilin'
// version format: major.minor.patch
version '0.9.5-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(16)
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'com.Qilin.qilin'
            artifactId = 'qilin'
            version = '0.9.5-SNAPSHOT'
            from components.java
        }
    }
}

dependencies {
    implementation(project(':qilin.microben'))
    implementation(project(':qilin.pta'))
    implementation(project(':qilin.core'))
    implementation(project(':qilin.util'))
    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

task fatJar(type: Jar, dependsOn: ['build']) {
    manifest {
        attributes 'artifact': 'qilin',
                'Version': getArchiveVersion(),
                'Main-Class': 'driver.Main'
    }
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    doLast {
        copy {
            from "$buildDir/libs/${archiveBaseName.get()}-${getArchiveVersion().get()}.jar"
            into "$rootDir/artifact/"
            into "/Users/palaniappanmuthuraman/Documents/Project_Thesis/libs/"
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'maven-publish'

    group rootProject.group
    version rootProject.version

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allJava
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc.destinationDir
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(16)
            vendor = JvmVendorSpec.ADOPTIUM
        }
    }
    publishing.publications {
        qilin(MavenPublication) {
            artifactId = artifactId.substring(6)
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }

//    publishing.repositories {
//        maven {
//            name = "GitHubPackages"
//            url = "https://maven.pkg.github.com/QiLinPTA/QiLin"
//            credentials {
//                username = project.findProperty("gpr.user") ?: "QiLinPTA"
//                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
//            }
//        }
//    }
}
